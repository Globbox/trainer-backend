services:
  web:
    build:
      context: .
      dockerfile: compose/app/Dockerfile
    restart: always
    expose:
      - 8000
    env_file:
      - .env
    depends_on:
      - db
    entrypoint: ["run_dev_server.sh"]
    volumes:
      - ./src:/www/backend
      - logs_volume:/www/logs
      - static_volume:/www/static
      - media_volume:/www/media
      - mail_volume:/www/mail

  db:
    image: mysql:8.3.0
    restart: always
    environment:
      MYSQL_DATABASE: $DB_NAME
      MYSQL_USER: $DB_USER
      MYSQL_PASSWORD: $DB_PASS
      MYSQL_ROOT_PASSWORD: $DB_ROOT_PASS
    ports:
      - "3306:3306"
    env_file:
      - .env
    volumes:
      - db_data:/var/lib/mysql

  nginx:
    restart: always
    build: compose/nginx/
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - static_volume:/www/static
      - media_volume:/www/media

  celery:
    build:
      context: .
      dockerfile: compose/app/Dockerfile
    restart: always
    env_file:
      - .env
    depends_on:
      - redis
    entrypoint: ["run_celery.sh"]
    volumes:
      - ./src:/www/backend
      - logs_volume:/www/logs
      - static_volume:/www/static
      - media_volume:/www/media
      - mail_volume:/www/mail

  redis:
    image: redis:latest
    expose:
      - "6379"

  flower:
    image: mher/flower
    container_name: flower
    restart: always
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1
      - FLOWER_PURGE_OFFLINE_WORKERS=10
    ports:
      - "5555:5555"

volumes:
  db_data:
  logs_volume:
  static_volume:
  media_volume:
  mail_volume: