# Generated by Django 5.0.2 on 2024-09-04 22:36

from django.conf import settings
from django.db import migrations
from django.db import models
import django.db.models.deletion

import trainer_backend.core.db.mixins
import trainer_backend.core.file.mixins
import trainer_backend.core.file.utils
import trainer_backend.trainer.enums


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AudioGuidance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('guidance_type', models.PositiveSmallIntegerField(choices=[(trainer_backend.trainer.enums.AudioGuidanceType['START_EXAM'], 'Начало экзамена'), (trainer_backend.trainer.enums.AudioGuidanceType['END_EXAM'], 'Окончание экзамена'), (trainer_backend.trainer.enums.AudioGuidanceType['BEFORE_TASK_EXECUTION'], 'Начало выполнения задания'), (trainer_backend.trainer.enums.AudioGuidanceType['INTERVIEW_END'], 'Завершение интервью')], unique=True, verbose_name='Тип аудио сопровождения')),
                ('audio', models.FileField(upload_to=trainer_backend.core.file.utils.upload_hash_file, verbose_name='Аудио файл')),
            ],
            options={
                'verbose_name': 'Аудио сопровождение',
                'verbose_name_plural': 'Аудио сопровождения',
            },
            bases=(trainer_backend.core.file.mixins.AudioFileConvertMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Image',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('header', models.CharField(max_length=100, verbose_name='Заголовок')),
                ('image', models.FileField(upload_to=trainer_backend.core.file.utils.upload_hash_file, verbose_name='Изображение')),
            ],
            options={
                'verbose_name': 'Изображение',
                'verbose_name_plural': 'Изображения',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('audio', models.FileField(blank=True, null=True, upload_to=trainer_backend.core.file.utils.upload_hash_file, verbose_name='Аудио задание')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
            },
            bases=(trainer_backend.core.file.mixins.AudioFileConvertMixin, trainer_backend.core.db.mixins.ShortDescriptionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='QuestionAudioGuidance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_number', models.PositiveIntegerField(unique=True, verbose_name='Номер вопроса')),
                ('audio', models.FileField(upload_to=trainer_backend.core.file.utils.upload_hash_file, verbose_name='Аудио файл')),
            ],
            options={
                'verbose_name': 'Аудио сопровождение вопросов',
                'verbose_name_plural': 'Аудио сопровождения вопросов',
            },
            bases=(models.Model, trainer_backend.core.file.mixins.AudioFileConvertMixin),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(trainer_backend.trainer.enums.TaskType['SPEAKING'], 'Разговорный'), (trainer_backend.trainer.enums.TaskType['STUDY_THE_ADVERTISEMENT'], 'Изучение рекламы'), (trainer_backend.trainer.enums.TaskType['INTERVIEW'], 'Интервью'), (trainer_backend.trainer.enums.TaskType['IMAGE_SPEAKING'], 'Разговорный с изображениями')], verbose_name='Тип задания')),
                ('header', models.TextField(verbose_name='Заголовок')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('audio', models.FileField(blank=True, null=True, upload_to=trainer_backend.core.file.utils.upload_hash_file, verbose_name='Аудио задание')),
            ],
            options={
                'verbose_name': 'Задание',
                'verbose_name_plural': 'Задания',
            },
            bases=(trainer_backend.core.file.mixins.AudioFileConvertMixin, trainer_backend.core.db.mixins.ShortDescriptionMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ThematicSpeechContent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('short_designation', models.CharField(choices=[('А', 'А'), ('Б', 'Б'), ('В', 'В'), ('Г', 'Г'), ('Д', 'Д'), ('Е', 'Е'), ('Ж', 'Ж'), ('З', 'З'), ('И', 'И'), ('Й', 'Й'), ('К', 'К'), ('Л', 'Л'), ('М', 'М'), ('Н', 'Н'), ('О', 'О'), ('П', 'П'), ('Р', 'Р'), ('С', 'С'), ('Т', 'Т'), ('У', 'У'), ('Ф', 'Ф'), ('Х', 'Х'), ('Ц', 'Ц'), ('Ч', 'Ч'), ('Ш', 'Ш'), ('Щ', 'Щ'), ('Ъ', 'Ъ'), ('Ы', 'Ы'), ('Ь', 'Ь'), ('Э', 'Э'), ('Ю', 'Ю'), ('Я', 'Я')], max_length=1, unique=True, verbose_name='Краткое обозначение')),
                ('description', models.TextField(verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Тематическое содержание речи',
                'verbose_name_plural': 'Тематические содержания речи',
            },
            bases=(models.Model, trainer_backend.core.db.mixins.ShortDescriptionMixin),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Ответ пользователя',
                'verbose_name_plural': 'Ответы пользователя',
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Номер экзамена')),
                ('fipi', models.BooleanField(default=False, verbose_name='Экзамен из банка ФИПИ')),
                ('type', models.SmallIntegerField(choices=[(trainer_backend.trainer.enums.ExamType['EGE'], 'ЕГЭ'), (trainer_backend.trainer.enums.ExamType['OGE'], 'ОГЭ')], verbose_name='Тип экзамена')),
            ],
            options={
                'verbose_name': 'Экзамен',
                'verbose_name_plural': 'Экзамены',
                'unique_together': {('number', 'type')},
            },
        ),
        migrations.CreateModel(
            name='TaskAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.FileField(blank=True, null=True, upload_to=trainer_backend.core.file.utils.upload_hash_file, verbose_name='Аудио задание')),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='trainer.answer', verbose_name='Ответ пользователя')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='trainer.task', verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Ответ пользователя к заданию',
                'verbose_name_plural': 'Ответы пользователя к заданиям',
                'unique_together': {('answer', 'task')},
            },
        ),
        migrations.CreateModel(
            name='TaskTypeParameter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(trainer_backend.trainer.enums.TaskType['SPEAKING'], 'Разговорный'), (trainer_backend.trainer.enums.TaskType['STUDY_THE_ADVERTISEMENT'], 'Изучение рекламы'), (trainer_backend.trainer.enums.TaskType['INTERVIEW'], 'Интервью'), (trainer_backend.trainer.enums.TaskType['IMAGE_SPEAKING'], 'Разговорный с изображениями')], unique=True, verbose_name='Тип задания')),
                ('number', models.PositiveIntegerField(verbose_name='Порядок задания в экзамене')),
                ('audio', models.FileField(upload_to=trainer_backend.core.file.utils.upload_hash_file, verbose_name='Аудио сопровождение')),
                ('preparation_seconds', models.PositiveIntegerField(verbose_name='Кол-во секунд на подготовку задания')),
                ('execution_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во секунд на выполнение задания')),
                ('question_execution_seconds', models.PositiveIntegerField(blank=True, null=True, verbose_name='Кол-во секунд на ответ')),
            ],
            options={
                'verbose_name': 'Параметр для типов заданий',
                'verbose_name_plural': 'Параметры для типов заданий',
                'unique_together': {('type', 'number')},
            },
            bases=(models.Model, trainer_backend.core.file.mixins.AudioFileConvertMixin),
        ),
        migrations.AddField(
            model_name='task',
            name='thematic_speech_content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='trainer.thematicspeechcontent', verbose_name='Тематическое содержания речи'),
        ),
        migrations.CreateModel(
            name='QuestionsInTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Порядок вопросов в задании')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_tasks', to='trainer.question', verbose_name='Вопросы')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='trainer.task', verbose_name='Основное задание')),
            ],
            options={
                'verbose_name': 'Вопрос в задании',
                'verbose_name_plural': 'Вопросы в задании',
                'unique_together': {('task', 'question', 'number')},
            },
        ),
        migrations.CreateModel(
            name='ImagesInTask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField(verbose_name='Порядок изображений в задании')),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_tasks', to='trainer.image', verbose_name='Изображения')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='trainer.task', verbose_name='Основное задание')),
            ],
            options={
                'verbose_name': 'Изображения в задании',
                'verbose_name_plural': 'Изображений в задании',
                'unique_together': {('task', 'number')},
            },
        ),
        migrations.CreateModel(
            name='QuestionAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('audio', models.FileField(upload_to=trainer_backend.core.file.utils.upload_hash_file, verbose_name='Аудио задание')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='trainer.question', verbose_name='Вопрос')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='trainer.taskanswer', verbose_name='Ответ к заданию')),
            ],
            options={
                'verbose_name': 'Ответ пользователя к вопросу',
                'verbose_name_plural': 'Ответы пользователя к вопросам',
                'unique_together': {('task', 'question')},
            },
        ),
        migrations.CreateModel(
            name='TasksInExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='trainer.exam', verbose_name='Экзамен')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='trainer.task', verbose_name='Задание')),
            ],
            options={
                'verbose_name': 'Задание в экзамене',
                'verbose_name_plural': 'Задания в экзамене',
                'unique_together': {('exam', 'task')},
            },
        ),
    ]
