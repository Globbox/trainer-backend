# Generated by Django 5.0.2 on 2024-11-14 21:30

from django.conf import settings
from django.db import migrations
from django.db import models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('trainer', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.AlterUniqueTogether(
            name='exam',
            unique_together={('number', 'exam_type')},
        ),
        migrations.AddField(
            model_name='imagesintask',
            name='image',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_tasks', to='trainer.image', verbose_name='Изображения'),
        ),
        migrations.AddField(
            model_name='questionanswer',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='trainer.question', verbose_name='Вопрос'),
        ),
        migrations.AddField(
            model_name='questionsintask',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_tasks', to='trainer.question', verbose_name='Вопросы'),
        ),
        migrations.AddField(
            model_name='questionsintask',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='trainer.task', verbose_name='Основное задание'),
        ),
        migrations.AddField(
            model_name='imagesintask',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='trainer.task', verbose_name='Основное задание'),
        ),
        migrations.AddField(
            model_name='taskanswer',
            name='answer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='trainer.answer', verbose_name='Ответ пользователя'),
        ),
        migrations.AddField(
            model_name='taskanswer',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='trainer.task', verbose_name='Задание'),
        ),
        migrations.AddField(
            model_name='questionanswer',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='trainer.taskanswer', verbose_name='Ответ к заданию'),
        ),
        migrations.AddField(
            model_name='tasksinexam',
            name='exam',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tasks', to='trainer.exam', verbose_name='Экзамен'),
        ),
        migrations.AddField(
            model_name='tasksinexam',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='trainer.task', verbose_name='Задание'),
        ),
        migrations.AlterUniqueTogether(
            name='tasktypeparameter',
            unique_together={('task_type', 'number')},
        ),
        migrations.AddField(
            model_name='task',
            name='thematic_speech_content',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='tasks', to='trainer.thematicspeechcontent', verbose_name='Тематическое содержания речи'),
        ),
        migrations.AlterUniqueTogether(
            name='questionsintask',
            unique_together={('task', 'question', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='imagesintask',
            unique_together={('task', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='taskanswer',
            unique_together={('answer', 'task')},
        ),
        migrations.AlterUniqueTogether(
            name='questionanswer',
            unique_together={('task', 'question')},
        ),
        migrations.AlterUniqueTogether(
            name='tasksinexam',
            unique_together={('exam', 'task')},
        ),
    ]
